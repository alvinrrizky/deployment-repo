services:
  auth-service:
    image: ghcr.io/${GITHUB_USERNAME}/auth-service:latest
    ports:
      - "3001:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  common-service:
    image: ghcr.io/${GITHUB_USERNAME}/common-service:latest
    ports:
      - "3002:3000"
    restart: unless-stopped
    env_file:
      - .env

  cache-service:
    image: ghcr.io/${GITHUB_USERNAME}/cache-service:latest
    ports:
      - "3003:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  generate-service:
    image: ghcr.io/${GITHUB_USERNAME}/generate-service:latest
    ports:
      - "3004:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  note-management-service:
    image: ghcr.io/${GITHUB_USERNAME}/note-management-service:latest
    ports:
      - "3005:3000"
    environment:
      MONGODB_URI: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/scripty_db
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  note-service:
    image: ghcr.io/${GITHUB_USERNAME}/note-service:latest
    ports:
      - "3006:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  notification-management-service:
    image: ghcr.io/${GITHUB_USERNAME}/notification-management-service:latest
    ports:
      - "3007:3000"
    environment:
      MONGODB_URI: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/scripty_db
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  notification-service:
    image: ghcr.io/${GITHUB_USERNAME}/notification-service:latest
    ports:
      - "3008:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  tag-management-service:
    image: ghcr.io/${GITHUB_USERNAME}/tag-management-service:latest
    ports:
      - "3009:3000"
    environment:
      MONGODB_URI: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/scripty_db
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  tag-service:
    image: ghcr.io/${GITHUB_USERNAME}/tag-service:latest
    ports:
      - "3010:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  user-management-service:
    image: ghcr.io/${GITHUB_USERNAME}/user-management-service:latest
    ports:
      - "3011:3000"
    environment:
      MONGODB_URI: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/scripty_db
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  user-service:
    image: ghcr.io/${GITHUB_USERNAME}/user-service:latest
    ports:
      - "3012:3000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6380:6379"
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongo-container
    restart: on-failure
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:
